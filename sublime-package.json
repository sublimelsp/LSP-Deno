{
  "contributions": {
    "settings": [
      {
        "file_patterns": [
          "/LSP-Deno.sublime-settings"
        ],
        "schema": {
          "$id": "sublime://settings/LSP-Deno",
          "allOf": [
            {
              "$ref": "sublime://settings/LSP-plugin-base"
            },
            {
              "$ref": "sublime://settings/LSP-Deno#/definitions/PluginConfig"
            }
          ],
          "definitions": {
            "PluginConfig": {
              "properties": {
                "settings": {
                  "additionalProperties": false,
                  "properties": {
                    "deno.codeLens.implementations": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Enables or disables the display of code lens information for implementations of items in the code.",
                      "type": "boolean"
                    },
                    "deno.codeLens.references": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Enables or disables the display of code lens information for references of items in the code.",
                      "type": "boolean"
                    },
                    "deno.codeLens.referencesAllFunctions": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Enables or disables the display of code lens information for all functions in the code.",
                      "type": "boolean"
                    },
                    "deno.codeLens.test": {
                      "default": true,
                      "markdownDescription": "Enables or disables the display of code lenses that allow running of individual tests in the code.",
                      "type": "boolean"
                    },
                    "deno.codeLens.testArgs": {
                      "default": [
                        "--allow-all"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "Additional arguments to use with the run test code lens.  Defaults to `[ \"--allow-all\" ]`.",
                      "type": "array"
                    },
                    "deno.config": {
                      "default": null,
                      "examples": [
                        "./tsconfig.json",
                        "/path/to/tsconfig.json",
                        "C:\\path\\to\\tsconfig.json"
                      ],
                      "markdownDescription": "The file path to a `tsconfig.json` file. This is the equivalent to using `--config` on the command line. The path can be either be relative to the workspace, or an absolute path.\n\n**Recommended to be set per-project.**",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "deno.enable": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Controls if the Deno Language Server is enabled. When enabled, the extension will disable the built-in VSCode JavaScript and TypeScript language services, and will use the Deno Language Server (`deno lsp`) instead.",
                      "type": "boolean"
                    },
                    "deno.importMap": {
                      "default": null,
                      "examples": [
                        "./import_map.json",
                        "/path/to/import_map.json",
                        "C:\\path\\to\\import_map.json"
                      ],
                      "markdownDescription": "The file path to an import map. This is the equivalent to using `--import-map` on the command line.\n\n[Import maps](https://deno.land/manual@v1.6.0/linking_to_external_code/import_maps) provide a way to \"relocate\" modules based on their specifiers. The path can either be relative to the workspace, or an absolute path.\n\n**Recommended to be set per-project.**",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "deno.internalDebug": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Determines if the internal debugging information for the Deno language server will be logged to the _Deno Language Server_ console.",
                      "type": "boolean"
                    },
                    "deno.lint": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Controls if linting information will be provided by the Deno Language Server.",
                      "type": "boolean"
                    },
                    "deno.suggest.autoImports": {
                      "default": true,
                      "type": "boolean"
                    },
                    "deno.suggest.completeFunctionCalls": {
                      "default": false,
                      "type": "boolean"
                    },
                    "deno.suggest.imports.autoDiscover": {
                      "default": true,
                      "markdownDescription": "If enabled, when new hosts/origins are encountered that support import suggestions, you will be prompted to enable or disable it.  Defaults to `true`.",
                      "type": "boolean"
                    },
                    "deno.suggest.imports.hosts": {
                      "default": {},
                      "examples": [
                        {
                          "https://deno.land/": true
                        }
                      ],
                      "markdownDescription": "Controls which hosts are enabled for import suggestions.",
                      "type": "object"
                    },
                    "deno.suggest.names": {
                      "default": true,
                      "type": "boolean"
                    },
                    "deno.suggest.paths": {
                      "default": true,
                      "type": "boolean"
                    },
                    "deno.unstable": {
                      "default": false,
                      "examples": [
                        true,
                        false
                      ],
                      "markdownDescription": "Controls if code will be type checked with Deno's unstable APIs. This is the equivalent to using `--unstable` on the command line.\n\n**Not recommended to be enabled globally.**",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "settings": {
              "properties": {
                "LSP": {
                  "properties": {
                    "Deno": {
                      "$ref": "sublime://settings/LSP-Deno#/definitions/PluginConfig"
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
